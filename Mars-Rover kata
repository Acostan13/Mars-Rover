// Rover Object Goes Here
// ======================
let marsSpace = [[{x:0,y:0}, {x:1,y:0}, {x:2,y:0},{x:3,y:0},{x:4,y:0},{x:5,y:0},{x:6,y:0},{x:7,y:0},{x:8,y:0},{x:9,y:0},{x:10,y:0}], [{x:0,y:1}, {x:1,y:1}, {x:2,y:1},{x:3,y:1},{x:4,y:1},{x:5,y:1},{x:6,y:1},{x:7,y:1},{x:8,y:1},{x:9,y:1},{x:10,y:1}],
[{x:0,y:2}, {x:1,y:2}, {x:2,y:2},{x:3,y:2},{x:4,y:2},{x:5,y:2},{x:6,y:2},{x:7,y:2},{x:8,y:2},{x:9,y:2},{x:10,y:2}],
[{x:0,y:3}, {x:1,y:3}, {x:2,y:3},{x:3,y:3},{x:4,y:3},{x:5,y:3},{x:6,y:3},{x:7,y:3},{x:8,y:3},{x:9,y:3},{x:10,y:3}],
[{x:0,y:4}, {x:1,y:4}, {x:2,y:4},{x:3,y:4},{x:4,y:4},{x:5,y:4},{x:6,y:4},{x:7,y:4},{x:8,y:4},{x:9,y:4},{x:10,y:4}],
[{x:0,y:5}, {x:1,y:5}, {x:2,y:5},{x:3,y:5},{x:4,y:5},{x:5,y:5},{x:6,y:5},{x:7,y:5},{x:8,y:5},{x:9,y:5},{x:10,y:5}],
[{x:0,y:6}, {x:1,y:6}, {x:2,y:6},{x:3,y:6},{x:4,y:6},{x:5,y:6},{x:6,y:6},{x:7,y:6},{x:8,y:6},{x:9,y:6},{x:10,y:6}],
[{x:0,y:7}, {x:1,y:7}, {x:2,y:7},{x:3,y:7},{x:4,y:7},{x:5,y:7},{x:6,y:7},{x:7,y:7},{x:8,y:7},{x:9,y:7},{x:10,y:7}],
[{x:0,y:8}, {x:1,y:8}, {x:2,y:8},{x:3,y:8},{x:4,y:8},{x:5,y:8},{x:6,y:8},{x:7,y:8},{x:8,y:8},{x:9,y:8},{x:10,y:8}],
[{x:0,y:9}, {x:1,y:9}, {x:2,y:9},{x:3,y:9},{x:4,y:9},{x:5,y:9},{x:6,y:9},{x:7,y:9},{x:8,y:9},{x:9,y:9},{x:10,y:9}],
[{x:0,y:10}, {x:1,y:10}, {x:2,y:10},{x:3,y:10},{x:4,y:10},{x:5,y:10},{x:6,y:10},{x:7,y:2},{x:8,y:10},{x:9,y:10},{x:10,y:10}]]


const rover = {  
  x: 0,
  y: 0,
  direction: "N",
  travelLog: [marsSpace.x, marsSpace.y]
};

// ======================
function turnLeft(rover){
  console.log("turnLeft was called!");
  //setting the direction
  switch(rover.direction){
    case "N": // rover facing north
      rover.direction = "W";
      break;
    case "S": // rover facing south
      rover.direction = "E";
      break;  
    case "E": // rover facing east
      rover.direction = "N";
      break; 
    case "W": // rover facing west
      rover.direction = "S";
      break; 
    }
}

function turnRight(rover){
  console.log("turnRight was called!");
  //setting the direction
  switch(rover.direction){
    case "N": // rover facing north
      rover.direction = "E";
      break;
    case "S": // rover facing south
      rover.direction = "W";
      break;  
    case "E": // rover facing east
      rover.direction = "S";
      break; 
    case "W": // rover facing west
      rover.direction = "N";
      break; 
    }
}

function moveForward(rover){
  console.log("moveForward was called")
  switch(rover.direction){
    case "N": // rover facing north
      if(rover.y > 0){
        rover.y--;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break;
    case "S": // rover facing south
      if(rover.y < 10){
        rover.y++;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break;  
    case "E": // rover facing east
      if(rover.x < 10){
        rover.x++;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break; 
    case "W": // rover facing west
      if(rover.x > 0){
        rover.x--;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break; 
    }
}

function moveBack(rover){
  console.log("moveBack was called")
  switch(rover.direction){
    case "N": // rover facing north
      if(rover.y < 10){
        rover.y++;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break;
    case "S": // rover facing south
      if(rover.y > 0){
        rover.y--;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break;  
    case "E": // rover facing east
      if(rover.x > 0){
        rover.x--;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break; 
    case "W": // rover facing west
      if(rover.x < 10){
        rover.x++;
      }
      else{
        console.log("The mars rover is getting lost!");
      }
      break; 
    }
}

function command(orders){
 
  for (let i = 0; i < orders.length; i++){
    let order = orders[i];

    switch(order){
      case "l": // left
        turnLeft(rover);
        break;
      case "r": // right
        turnRight(rover);
        break;  
      case "f": // forward
        moveForward(rover);
        let forwardPosition = {x: rover.x, y: rover.y};
        rover.travelLog.push(forwardPosition);
        break; 
      case "b": // back
        moveBack(rover);
        let backPosition = {x: rover.x, y: rover.y};
        rover.travelLog.push(backPosition);
        break;
      default: // unidentified directional command
        break;
    }
  }
  console.log(rover.travelLog);
}

//command("rffrfflfrff");
command("rff");
